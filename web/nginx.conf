
worker_processes 4;

events { worker_connections 1024; }

http {

    # List of application servers
    upstream app_servers {
        least_conn;
        server api_service:8000 weight=10 max_fails=3 fail_timeout=30s;
        server pollution_service:8001 weight=10 max_fails=3 fail_timeout=30s;
        server diseases_service:8002 weight=10 max_fails=3 fail_timeout=30s;
        server prediction_service:8003 weight=10 max_fails=3 fail_timeout=30s;
    }


    server {
        listen 80 default_server;
        server_name opendata.cs.pub.ro;

        root /var/www/myexample.com;
        index index.html index.htm;


        # Any route that doesn't have a file extension (e.g. /devices)
        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            proxy_pass http://api_service:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/pollution {
            proxy_pass http://pollution_service:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/diseases {
            proxy_pass http://diseases_service:8002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/prediction {
            proxy_pass http://prediction_service:8003;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}

